{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-enrollee/edit-enrollee.component.ts","./src/app/edit-enrollee/edit-enrollee.component.html","./src/app/enrollees/enrollees.component.ts","./src/app/enrollees/enrollees.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EnrolleesComponent } from './enrollees/enrollees.component';\nimport { LoginComponent } from './login/login.component';\nimport { EditEnrolleeComponent } from './edit-enrollee/edit-enrollee.component';\n\nconst routes: Routes = [\n  {path: 'enrollees', component: EnrolleesComponent},\n  {path: 'login' , component : LoginComponent},\n  {path : 'editEnrollee/:id',component:EditEnrolleeComponent},\n  { path: '', redirectTo: '/login',pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Event, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{  \n  constructor(private route: ActivatedRoute, private router: Router){}\n  ngOnInit() {\n       \n  }\n  \n}\n","<router-outlet></router-outlet>  \n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EnrolleesComponent } from './enrollees/enrollees.component';\nimport { LoginComponent } from './login/login.component';\nimport { EditEnrolleeComponent } from './edit-enrollee/edit-enrollee.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EnrolleesComponent,\n    LoginComponent,\n    EditEnrolleeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-enrollee',\n  templateUrl: './edit-enrollee.component.html',\n  styleUrls: ['./edit-enrollee.component.css']\n})\nexport class EditEnrolleeComponent implements OnInit {\n  enrolleeList : any =[];\n  editForm: FormGroup;\n  statuses : any = [];\n  id: Number;\n  result : any;\n  displaySuccess: boolean = false;\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = +this.route.snapshot.paramMap.get('id');\n    this.enrolleeList = JSON.parse(localStorage.getItem(\"enrollees\")); \n    let index = this.enrolleeList.findIndex(ele => ele.id == this.id);\n    this.statuses = [true,false];\n    if(index!=-1){\n      this.result = this.enrolleeList[index];\n      this.editForm = this.formBuilder.group({       \n        id: {value:this.result.id,disabled:true},\n        name: [this.result.name, [Validators.required]],\n        DOB: {value:this.result.DOB,disabled:true},\n        activationStatus : [this.result.activationStatus, [Validators.required]]\n    });\n    \n    }\n  }\n  onSubmit(){\n    if(this.editForm.invalid){\n      return;\n    }\n    this.displaySuccess = false;\n    let values = this.editForm.value;\n    this.result['name'] = values['name'];\n    this.result['activationStatus'] = values['activationStatus'];    \n    let index = this.enrolleeList.findIndex(ele => ele.id == this.id);\n    this.enrolleeList[index] = this.result;\n    localStorage.setItem(\"enrollees\",JSON.stringify(this.enrolleeList));\n    this.displaySuccess = true;\n    setTimeout(() => {\n      this.router.navigate(['/enrollees']);\n    },2500);\n  }\n\n  back(){\n    this.router.navigate(['/enrollees']);\n  }\n\n  logout(){\n    localStorage.removeItem(\"enrollees\");\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\"> \n    <span class=\"task-left\">Angular Task</span> \n    <div class=\"spacer\"></div>\n    <span class=\"task\"><a (click)=\"logout()\">Logout</a></span>\n  </div>\n<div class=\"content\" role=\"main\">\n    <div class=\"container\">  \n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"displaySuccess\">\n            Enrollee details updated successfully...redirecting to list of Enrollees...\n          </div>\n          <h1 class=\"text-center\">Edit Enrollee</h1>\n          <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">ID</label>\n                <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\"  formControlName=\"id\" autocomplete=\"off\" >          \n              </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Name</label>\n              <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"Enter name\" formControlName=\"name\" autocomplete=\"off\">          \n            </div>\n            <div *ngIf=\"editForm.controls['name'].invalid && (editForm.controls['name'].dirty || editForm.controls['name'].touched)\" class=\"alert alert-danger\">\n              <div *ngIf=\"editForm.controls['name'].errors.required\">\n              User Name is required.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Date Of Birth</label>\n            <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\"  formControlName=\"DOB\" autocomplete=\"off\" >          \n          </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\">Activation Status</label>              \n              <select class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"activationStatus\">\n                <option value=\"\" disabled>Select</option>\n                <option *ngFor=\"let status of statuses\" [ngValue]=\"status\">{{status}}</option>\n              </select>\n            </div>\n            <div *ngIf=\"editForm.controls['activationStatus'].invalid && (editForm.controls['activationStatus'].dirty || editForm.controls['activationStatus'].touched)\" class=\"alert alert-danger\">\n              <div *ngIf=\"editForm.controls['activationStatus'].errors.required\">\n                Activation Status is required.\n            </div>\n          </div>\n            <button type=\"submit\" class=\"btn btn-primary edit\" [disabled]=\"!editForm.valid\">Update</button>\n            <button type=\"button\" class=\"btn btn-primary back\" (click)=\"back()\">Back</button>\n          </form>    \n      </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-enrollees',\n  templateUrl: './enrollees.component.html',\n  styleUrls: ['./enrollees.component.css']\n})\nexport class EnrolleesComponent implements OnInit {\n  enrolleesList : any = [];\n  displayLogout : boolean = true;\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.displayLogout = true;\n    this.enrolleesList = localStorage.getItem(\"enrollees\");\n    if(!this.enrolleesList){\n      let list :any= [];\n      list = [{\"id\":1,\"name\":\"John\",\"DOB\":\"01/01/1990\",\"activationStatus\":true},{\"id\":2,\"name\":\"Peter\",\"DOB\":\"01/01/1991\",\"activationStatus\":false},{\"id\":3,\"name\":\"dinesh\",\"DOB\":\"01/11/1989\",\"activationStatus\":true},{\"id\":4,\"name\":\"Johnson\",\"DOB\":\"11/10/1990\",\"activationStatus\":false},{\"id\":5,\"name\":\"Marsh\",\"DOB\":\"01/01/1993\",\"activationStatus\":true}];\n      localStorage.setItem(\"enrollees\",JSON.stringify(list));\n      this.enrolleesList = list;\n    }\n    else{\n      this.enrolleesList = JSON.parse(this.enrolleesList);\n    }\n  }\n  logout(){\n    localStorage.removeItem(\"enrollees\");\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\"> \n  <span class=\"task-left\">Angular Task</span> \n  <div class=\"spacer\"></div>\n  <span class=\"task\"><a (click)=\"logout()\">Logout</a></span>\n</div>\n<div class=\"content\" role=\"main\">\n    <h2>List Of Enrollees</h2>\n    <table class=\"table\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Date Of Birth</th>\n            <th scope=\"col\">Activation Status</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let list of enrolleesList;let i=index;\">\n            <th scope=\"row\">{{list.id}}</th>\n            <td>{{list.name}}</td>\n            <td>{{list.DOB}}</td>\n            <td>{{list.activationStatus}}</td>\n            <td><a [routerLink]=\"['/editEnrollee', list.id]\">Edit</a></td>\n          </tr>          \n        </tbody>\n      </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginFailure: boolean = false;\n  loginForm: FormGroup;\n   constructor(private formBuilder: FormBuilder,private route: ActivatedRoute, private router: Router) {    \n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({       \n        userName: ['', [Validators.required]],\n        password: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    if(this.loginForm.invalid){\n      return;\n    }\n    this.loginFailure = false;\n    let values = this.loginForm.value;\n    if(values['userName'] && values['userName'].toLowerCase()==\"admin\" && values['password'] && values['password'].toLowerCase()==\"admin\"){\n      this.router.navigate(['/enrollees']); //, { id: heroId }\n    }else{\n      this.loginFailure = true;\n    }\n  }\n\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\"> \n  <span class=\"task-left\">Angular Task</span> \n  <div class=\"spacer\"></div>\n</div>\n\n<div class=\"content\" role=\"main\">  \n<div class=\"container\">    \n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"loginFailure\">\n      Please enter valid username and password.\n    </div>\n      <h1 class=\"text-center\">Login</h1>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">User Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"Enter userName\" formControlName=\"userName\" autocomplete=\"off\">          \n        </div>\n        <div *ngIf=\"loginForm.controls['userName'].invalid && (loginForm.controls['userName'].dirty || loginForm.controls['userName'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"loginForm.controls['userName'].errors.required\">\n          User Name is required.\n        </div>\n      </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" formControlName=\"password\" autocomplete=\"off\">\n        </div>\n        <div *ngIf=\"loginForm.controls['password'].invalid && (loginForm.controls['password'].dirty || loginForm.controls['password'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"loginForm.controls['password'].errors.required\">\n            Password is required.\n        </div>\n      </div>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Submit</button>\n      </form>    \n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}